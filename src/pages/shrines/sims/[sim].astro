---
import { getCollection } from "astro:content";
import SimsLayout from "../../../layouts/SimsLayout.astro";

export async function getStaticPaths() {
    const sims = await getCollection("simsCast");
    
    const paths = sims.flatMap(sim => {
        return sim.data.generation.flatMap(gen => {
            return gen.cast.map(char => ({
                params: { sim: char.name.toLowerCase().replace(" ", "-") },
                props: {
                    char,
                    generation: gen.number
                }
            }))
        })
    })

    // Okay this code is a lot . note for my future self trying to comprehend this: when accessing deeply nested JSON data you need to explain exactly how to find the data you want via flatmaps
    // All this function is doing is making a list of paths to generate, returning each layer of data step by step, and then passing the character info props

    return paths;
}

const { char, generation } = Astro.props;

const latestRef = 
    char.images[0].matureadultsrc ||
    char.images[0].youngadultsrc ||
    char.images[0].teenagesrc;
---
<SimsLayout title=`${char.name} (${char.pronouns})`>
    <div class="row pt-3">
        <div class="col-12 col-sm-6 col-lg-4 text-center">
            <div class="tabs">
                {char.images[0].teenagesrc && <button onclick="changeImage('tn')">Teenager</button>}
                {char.images[0].youngadultsrc && <button onclick="changeImage('ya')">Young Adult</button>}
                {char.images[0].matureadultsrc && <button onclick="changeImage('ma')">Adult</button>}
            </div>
            <div>
                <img id="referenceImage" height="500" src={latestRef}
                    data-tn={char.images[0].teenagesrc}
                    data-ya={char.images[0].youngadultsrc}
                    data-ma={char.images[0].matureadultsrc}
                ></img>
            </div>
        </div>

        <div class="col-12 col-sm-6 col-lg-8">
            <ul>
                <li><strong>Generation {generation}</strong></li>
                <li><strong>Role: </strong> {char.role}</li>
                <li><strong>Traits:</strong></li>
                    <ul>
                        {char.traits.map(trait =>
                            <li>{trait}</li>
                        )}
                    </ul>
            </ul>
        </div>
    </div>
</SimsLayout>

<script is:inline>
    // changes image src by way of the data in the actual image element
    function changeImage(age) {
        const image = document.getElementById("referenceImage");
        image.src = image.dataset[age];
    }
</script>